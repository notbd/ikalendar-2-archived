disabled_rules:
  - vertical_whitespace
  - identifier_name
  - trailing_comma
  - nesting
  - opening_brace
  - comment_spacing
  - cyclomatic_complexity
  - statement_position
#  - multiple_closures_with_trailing_closure
#  - force_cast
#  - function_body_length
#  - todo
#  - valid_docs
#  - missing_docs

opt_in_rules: # some rules are only opt-in
  #  - empty_count
  - missing_docs
  # Find all the available rules by running:
  # swiftlint rules

only_rules:
#  - closure_spacing
#  - colon
#  - empty_enum_arguments
#  - fatal_error_message
#  - force_cast
#  - force_try
#  - force_unwrapping
#  - implicitly_unwrapped_optional
#  - legacy_cggeometry_functions
#  - legacy_constant
#  - legacy_constructor
#  - legacy_nsgeometry_functions
#  - operator_usage_whitespace
#  - redundant_string_enum_value
#  - redundant_void_return
#  - return_arrow_whitespace
#  - trailing_newline
#  - type_name
#  - unused_closure_parameter
#  - unused_optional_binding
#  - vertical_whitespace
#  - void_return
#  - custom_rules

excluded:
  - Carthage
  - Pods
  - Imports

colon:
  apply_to_dictionaries: false

indentation: 2

# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length:
  - 100 # warning
  - 120 # error

# they can set both implicitly with an array
type_body_length:
  - 1400 # warning
  - 2000 # error

function_body_length:
  - 400 # warning
  - 1500 # error

# or they can set both explicitly
file_length:
  warning: 2000
  error: 4000

# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 60
    error: 80
  excluded: iPhone # excluded via string

identifier_name:
  min_length: 1 # only warning
  max_length: # warning and error
    warning: 50
    error: 80

function_parameter_count:
  warning: 7
  error: 10

custom_rules:
  no_objcMembers:
    name: "@objcMembers"
    regex: "@objcMembers"
    message: "Explicitly use @objc on each member you want to expose to Objective-C"
    severity: error

reporter: "xcode" # reporter type (xcode, json, csv, checkstyle)
